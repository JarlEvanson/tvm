//! Support code for `tvm_loader` crates booting from UEFI environments.

#![no_std]

#[doc(hidden)]
pub use tvm_loader::log_error;
pub use uefi::data_types::Status;

/// Create the `efi_main` function and accepts the main function to be called after setup of
/// `tvm_loader-uefi` is completed.
#[macro_export]
macro_rules! unsafe_entry_point {
    ($entry_point:ident) => {
        /// Entry point to the `tvm_loader` executable.
        ///
        /// This function is autogenerated by `tvm_loader-uefi::unsafe_entry_point`.
        ///
        /// # Safety
        ///
        /// This function should only be the entry point of the executable.
        #[unsafe(no_mangle)]
        extern "efiapi" fn efi_main() -> $crate::Status {
            let func: fn() -> Result<(), _> = $entry_point;
            match func() {
                Ok(()) => $crate::Status::SUCCESS,
                Err(error) => {
                    $crate::log_error!("{error}");

                    error.into()
                }
            }
        }
    };
}
